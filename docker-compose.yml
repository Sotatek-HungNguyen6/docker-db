version: "3"
services:
  mongo-replica-setup:
    container_name: mongo-replica-setup-local
    image: mongo:4.4
    restart: on-failure
    networks:
      - common
    volumes:
      - ./scripts/rs-init.sh:/scripts/rs-init.sh
    entrypoint: ["bash", "/scripts/rs-init.sh" ]
    depends_on:
      - mongo1-local
      - mongo2-local
      - mongo3-local
  mongo1-local:
    container_name: mongo1-local
    image: mongo:4.4
    volumes:
      - ./data/mongo1:/data/db
    networks:
      - common
    ports:
      - 27017:27017
    expose:
      - 27017
    restart: always
    entrypoint: ["/usr/bin/mongod", "--replSet", "rs0", "--bind_ip_all"]
  mongo2-local:
    container_name: mongo2-local
    image: mongo:4.4
    volumes:
      - ./data/mongo2:/data/db
    networks:
      - common
    ports:
      - 27018:27017
    restart: always
    entrypoint: ["/usr/bin/mongod", "--replSet", "rs0", "--bind_ip_all"]
  mongo3-local:
    container_name: mongo3-local
    image: mongo:4.4
    volumes:
      - ./data/mongo3:/data/db
    networks:
      - common
    ports:
      - 27019:27017
    restart: always
    entrypoint: ["/usr/bin/mongod", "--replSet", "rs0", "--bind_ip_all"]

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - ./data/redis:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - common
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - common
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - common
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
networks:
  common:
    driver: bridge
volumes:
  mongo1:
  mongo2:
  mongo3:

